!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class t extends e{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__submit-button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class n{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._trashButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._element.remove(),this._element=null}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__trash-button"),this._element.querySelector(".card__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}}class i{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}const o=(e,t)=>{l.open({name:e,link:t})};function r(e){return new n(e,"#card-template",o).getView()}const a=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=r(e);a.addItem(t)}},".gallery__cards");a.renderItems();const l=new class extends e{constructor(e){super(e),this._imageElement=this._popup.querySelector(".preview__modal-image"),this._captionElement=this._popup.querySelector(".preview__modal-caption")}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._imageElement.alt=t,this._captionElement.textContent=t,super.open()}}("#preview-image-modal");l.setEventListeners();const c=document.querySelector("#add-card-form"),m=new t("#add-card-modal",(e=>{const t=r({name:e.title,link:e.url});a.addItem(t),c.reset(),u.resetValidation(),m.close()}));m.setEventListeners();const _=new t("#profile-edit-modal",(e=>{d.setUserInfo({name:e.title,job:e.description}),_.close()}));_.setEventListeners();const d=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__title",jobSelector:".profile__description"});document.querySelector("#profile-edit-button").addEventListener("click",(()=>{const e=d.getUserInfo();_.setInputValues({title:e.name,description:e.job}),_.open()})),document.querySelector("#modal-add-button").addEventListener("click",(()=>{m.open()})),new i(s,document.querySelector("#edit-profile-form")).enableValidation();const u=new i(s,document.querySelector("#add-card-form"));u.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDQ00sRUFBU0MsWUFBWSxDQUFFdkYsS0FBTWdGLEVBQVNDLE1BQU9PLElBQUtSLEVBQVNTLGNBQzNESixFQUFpQnpHLE9BQU8sSUFHNUJ5RyxFQUFpQnBHLG9CQUdqQixNQUFNcUcsRUFBVyxJRy9ERixNQUNidEgsV0FBQUEsQ0FBVytGLEdBQWdDLElBQS9CLGFBQUUyQixFQUFZLFlBQUVDLEdBQWE1QixFQUN2QzdGLEtBQUswSCxhQUFleEgsU0FBU0MsY0FBY3FILEdBQzNDeEgsS0FBSzJILFlBQWN6SCxTQUFTQyxjQUFjc0gsRUFDNUMsQ0FFQUcsV0FBQUEsR0FDRSxNQUFPLENBQ0w5RixLQUFNOUIsS0FBSzBILGFBQWE1RCxZQUN4QndELElBQUt0SCxLQUFLMkgsWUFBWTdELFlBRTFCLENBRUF1RCxXQUFBQSxDQUFXUSxHQUFnQixJQUFmLEtBQUUvRixFQUFJLElBQUV3RixHQUFLTyxFQUN2QjdILEtBQUswSCxhQUFhNUQsWUFBY2hDLEVBQ2hDOUIsS0FBSzJILFlBQVk3RCxZQUFjd0QsQ0FDakMsR05vQjhCLENBQzlCRSxhQUFjLGtCQUNkQyxZQUFhLDBCRzJCZnZILFNBQVNDLGNBQWMsd0JBQXdCTSxpQkFBaUIsU0FBUyxLQUN2RSxNQUFNcUgsRUFBV1YsRUFBU1EsY0FDMUJULEVBQWlCbkYsZUFBZSxDQUM5QitFLE1BQU9lLEVBQVNoRyxLQUNoQnlGLFlBQWFPLEVBQVNSLE1BRXhCSCxFQUFpQjdHLE1BQU0sSUFHekJKLFNBQVNDLGNBQWMscUJBQXFCTSxpQkFBaUIsU0FBUyxLQUNwRW9HLEVBQWF2RyxNQUFNLElBSVksSUFBSTJELEVBQ25DOUIsRUFDQWpDLFNBQVNDLGNBQWMsdUJBRUFvRixtQkFFekIsTUFBTTJCLEVBQXVCLElBQUlqRCxFQUMvQjlCLEVBQ0FqQyxTQUFTQyxjQUFjLG1CQUV6QitHLEVBQXFCM0Isa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfb3BlbmVkXCIpIHx8XG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGZvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gZm9ybVZhbHVlcztcbiAgfVxuXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXG4gIH0sXG5dO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlU2VsZWN0b3JzID0ge1xuICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXG4gIGpvYlNlbGVjdG9yOiBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiLFxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUltYWdlQ2xpY2spIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3RyYXNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gICAgfSk7XG4gIH1cblxuICBfaGFuZGxlTGlrZUljb24oKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xuICB9XG5cbiAgX2hhbmRsZURlbGV0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIGdldFZpZXcoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fdHJhc2hCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdHJhc2gtYnV0dG9uXCIpO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cbn1cbiIsIi8vIGNvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHtcbiAgaW5pdGlhbENhcmRzLFxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXG4gIHByb2ZpbGVTZWxlY3RvcnMsXG59IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XG5cbi8vIEZ1bmN0aW9uIHRvIGhhbmRsZSBpbWFnZSBjbGljayBhbmQgb3BlbiBwb3B1cFxuY29uc3QgaGFuZGxlSW1hZ2VDbGljayA9IChuYW1lLCBsaW5rKSA9PiB7XG4gIGltYWdlUG9wdXAub3Blbih7IG5hbWUsIGxpbmsgfSk7XG59O1xuXG4vLyBGdW5jdGlvbiB0byBjcmVhdGUgYSBjYXJkXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGNhcmREYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChjYXJkRGF0YSwgXCIjY2FyZC10ZW1wbGF0ZVwiLCBoYW5kbGVJbWFnZUNsaWNrKTtcbiAgcmV0dXJuIGNhcmQuZ2V0VmlldygpO1xufVxuXG4vLyBJbml0aWFsaXplIENhcmRzIFNlY3Rpb25cbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChjYXJkRGF0YSk7XG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICB9LFxuICB9LFxuICBcIi5nYWxsZXJ5X19jYXJkc1wiXG4pO1xuXG5jYXJkU2VjdGlvbi5yZW5kZXJJdGVtcygpO1xuXG4vLyBJbml0aWFsaXplIFBvcHVwc1xuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwcmV2aWV3LWltYWdlLW1vZGFsXCIpO1xuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBhZGRDYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKTtcbmNvbnN0IGFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2FkZC1jYXJkLW1vZGFsXCIsIChmb3JtRGF0YSkgPT4ge1xuICBjb25zdCBjYXJkRGF0YSA9IHsgbmFtZTogZm9ybURhdGEudGl0bGUsIGxpbms6IGZvcm1EYXRhLnVybCB9O1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xuICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgYWRkQ2FyZEZvcm0ucmVzZXQoKTtcbiAgYWRkQ2FyZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGFkZENhcmRQb3B1cC5jbG9zZSgpO1xufSk7XG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgZWRpdFByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIiNwcm9maWxlLWVkaXQtbW9kYWxcIixcbiAgKGZvcm1EYXRhKSA9PiB7XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiBmb3JtRGF0YS50aXRsZSwgam9iOiBmb3JtRGF0YS5kZXNjcmlwdGlvbiB9KTtcbiAgICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gIH1cbik7XG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIEluaXRpYWxpemUgVXNlckluZm9cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZpbGVTZWxlY3RvcnMpO1xuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY29uc3QgdXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBlZGl0UHJvZmlsZVBvcHVwLnNldElucHV0VmFsdWVzKHtcbiAgICB0aXRsZTogdXNlckRhdGEubmFtZSxcbiAgICBkZXNjcmlwdGlvbjogdXNlckRhdGEuam9iLFxuICB9KTtcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XG59KTtcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1hZGQtYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XG59KTtcblxuLy8gSW5pdGlhbGl6ZSBGb3JtIFZhbGlkYXRpb25cbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1wcm9maWxlLWZvcm1cIilcbik7XG5wcm9maWxlRWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBhZGRDYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKVxuKTtcbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucHJldmlld19fbW9kYWwtaW1hZ2VcIik7XG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnByZXZpZXdfX21vZGFsLWNhcHRpb25cIik7XG4gIH1cblxuICBvcGVuKHsgbmFtZSwgbGluayB9KSB7XG4gICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XG4gICAgdGhpcy5faW1hZ2VFbGVtZW50LmFsdCA9IG5hbWU7XG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIGpvYjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oeyBuYW1lLCBqb2IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gam9iO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUG9wdXAiLCJjb25zdHJ1Y3RvciIsInBvcHVwU2VsZWN0b3IiLCJ0aGlzIiwiX3BvcHVwIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIm9wZW4iLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xvc2UiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0Iiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9mb3JtIiwiX2lucHV0TGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc3VibWl0QnV0dG9uIiwiX2dldElucHV0VmFsdWVzIiwiZm9ybVZhbHVlcyIsImZvckVhY2giLCJpbnB1dCIsIm5hbWUiLCJ2YWx1ZSIsInNldElucHV0VmFsdWVzIiwiZGF0YSIsInByZXZlbnREZWZhdWx0IiwidmFsaWRhdGlvblNldHRpbmdzIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiX2hhbmRsZUxpa2VJY29uIiwiX3RyYXNoQnV0dG9uIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJfY2FyZEltYWdlIiwidG9nZ2xlIiwiX2VsZW1lbnQiLCJnZXRWaWV3IiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsIl9zZXR0aW5ncyIsIl9mb3JtRWxlbWVudCIsIkFycmF5IiwiZnJvbSIsIl9idXR0b25FbGVtZW50IiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVkIiwic29tZSIsImVuYWJsZVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb24iLCJpbWFnZVBvcHVwIiwiY3JlYXRlQ2FyZCIsImNhcmREYXRhIiwiY2FyZFNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsImNhcmRFbGVtZW50IiwiX2ltYWdlRWxlbWVudCIsIl9jYXB0aW9uRWxlbWVudCIsImFkZENhcmRGb3JtIiwiYWRkQ2FyZFBvcHVwIiwiZm9ybURhdGEiLCJ0aXRsZSIsInVybCIsInJlc2V0IiwiYWRkQ2FyZEZvcm1WYWxpZGF0b3IiLCJlZGl0UHJvZmlsZVBvcHVwIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImpvYiIsImRlc2NyaXB0aW9uIiwibmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJfbmFtZUVsZW1lbnQiLCJfam9iRWxlbWVudCIsImdldFVzZXJJbmZvIiwiX3JlZjIiLCJ1c2VyRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=